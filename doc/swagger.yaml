openapi: 3.0.2
info:
    title: minuarts-api
    version: 1.0.0
    description: '### this is swagger ui for our minuarst api'
paths:
    /patient:
        get:
            requestBody: {}
            tags:
                - MinuArst
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                    description: Returns a list of all patients
            summary: Get a list of all patients
            description: returns a list of all patients
        post:
            requestBody:
                description: A new patient to be created
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/new-patient'
                required: true
            tags:
                - NewBody
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/new-patient'
                    description: body created
                '400':
                    description: One or all params are missing
            summary: Create a patient
            description: Creates a new patient
    '/patient/{id}':
        summary: Get full detail of a patient
        description: Returns full list of details of a patient
        get:
            tags:
                - GetDetails
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Full list of details of a patient:
                                    value:
                                        patient_id: 1
                                        patient_firstname: Kati
                                        patient_lastname: Kask
                                        patient_email: kati.kask@gmail.com
                                        patient_pass: '1234'
                    description: returns list of details of a given patient id
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Patient /w+ was not found:
                                    value:
                                        error: Patient \w+ was not found in patient array.
                    description: Patient was not found in a patient array
            deprecated: false
            operationId: id
            summary: Get full details of patient
            description: Returns a list full of details of a patient
        put:
            requestBody:
                description: update patient details
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/update-patient'
                required: true
            tags:
                - UpdateDetails
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/update-patient'
                    description: patient updated
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                    description: User not found
                '500':
                    description: Something went wrong on our side
            deprecated: false
            operationId: id
            summary: updated patient details
            description: Updateds patients details by id
        delete:
            tags:
                - Delete
            responses:
                '204':
                    description: patient deleted
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                    description: patient with this id dose not exist
            deprecated: false
            operationId: id
            summary: Delete patient by id
            description: Deletes patient by id
        parameters:
            -
                name: id
                in: path
                required: true
    /doctor:
        get:
            tags:
                - MinuArst
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                all doctors:
                                    value:
                                        doctor_id: 1
                                        doctor_firstname: Liis
                                        doctor_lastname: Hangmaa
                    description: returns a list of all doctors
            summary: Gets a list of all patients
            description: returns a list of all doctors
        post:
            requestBody:
                description: A new doctor to be created
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/new-doctor'
                required: true
            tags:
                - NewBody
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/new-doctor'
                    description: body created
                '400':
                    description: One or all params are missing
            summary: Create a doctor
            description: Creates a new doctor
    '/doctor/{id}':
        get:
            tags:
                - GetDetails
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                doctor details:
                                    value:
                                        doctor_id: 1
                                        doctor_firstname: Liis
                                        doctor_lastname: Hangmaa
                                        field_id: 1
                                        doctor_email: liis.hangmaa@abc.ee
                    description: returns list of details of a given doctor id
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                doctor /w+ was not found:
                                    value:
                                        error: Doctor \w+ was not found in doctor array.
                    description: Doctor was not found in a doctor array
            deprecated: false
            operationId: id
            summary: Get full details of doctor
            description: Returns a list full of details of a doctor
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/update-doctor'
                required: true
            tags:
                - UpdateDetails
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/update-doctor'
                    description: doctor updated
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                    description: Doctor not found
                '500':
                    description: Something went wrong on our side
            deprecated: false
            operationId: id
            summary: updated doctor details
            description: Updates doctor details by id
        delete:
            tags:
                - Delete
            responses:
                '204':
                    description: doctor deleted
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                    description: doctor with this id dose not exist
            deprecated: false
            operationId: id
            summary: Delete doctor by id
            description: Deletes doctor by id
        parameters:
            -
                name: id
                in: path
                required: true
    /calendar:
        description: ''
        get:
            tags:
                - MinuArst
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                list of calendars:
                                    value:
                                        -
                                            calendar_id: 1
                                            calendar_comment: "random:\r\n[Patient Name] is a [age]-year-old individual who presented with [chief complaint]. After a thorough assessment, we have identified [relevant medical conditions or concerns], and the following diagnostic tests were conducted: [list of tests, if applicable].\r\n\r\nBased on the examination and test results, the primary concerns include [list of primary health issues]. In order to address these issues, the recommended treatment plan involves [prescribed medications, lifestyle changes, or further consultations]."
                                            calendar_datetime: '2023-12-15T15:15:15.000Z'
                    description: returns a list of all calendars
            summary: Gets a list of all calendars
            description: Returns a list of all calendars
    '/calendar/{id}':
        get:
            tags:
                - GetDetails
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                detail of calendar:
                                    value:
                                        calendar_id: 1
                                        doctor_id: 1
                                        patient_id: 1
                                        calendar_comment: "random:\r\n[Patient Name] is a [age]-year-old individual who presented with [chief complaint]. After a thorough assessment, we have identified [relevant medical conditions or concerns], and the following diagnostic tests were conducted: [list of tests, if applicable].\r\n\r\nBased on the examination and test results, the primary concerns include [list of primary health issues]. In order to address these issues, the recommended treatment plan involves [prescribed medications, lifestyle changes, or further consultations]."
                                        calendar_datetime: '2023-12-15T15:15:15.000Z'
                    description: returns list of details of a given calendar id
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                calendar /w+ was not found:
                                    value:
                                        error: Calendar \w+ was not found in calendar array.
                    description: Calendar was not found in a calendar array
            deprecated: false
            operationId: id
            summary: Returns a list full of details of a calendar
            description: returns list of details of a given calendar id
        parameters:
            -
                name: id
                in: path
                required: true
components:
    schemas:
        error:
            title: Root Type for error
            description: ''
            type: object
            properties:
                error:
                    type: string
            example:
                error: Error message.
        new-patient:
            title: Root Type for new-patient
            description: ''
            required:
                - patient_email
                - patient_firstname
                - patient_lastname
                - patient_pass
            type: object
            properties:
                patient_firstname:
                    type: string
                patient_lastname:
                    type: string
                patient_email:
                    type: string
                patient_pass:
                    type: string
            example:
                patient_firstname: Edvard
                patient_lastname: Richgofen
                patient_email: edvard.richg@gmail.com
                patient_pass: '1234'
        delete-patient:
            title: Root Type for delete-patient
            description: ''
            required:
                - id
            type: object
            properties:
                id:
                    format: int32
                    type: integer
            example:
                id: 1
        update-patient:
            title: Root Type for update-patient
            description: ''
            type: object
            properties:
                patient_firstname:
                    type: string
                patient_lastname:
                    type: string
                patient_email:
                    type: string
                patient_pass:
                    type: string
            example:
                patient_firstname: Edvard
                patient_lastname: Richgofen
        new-doctor:
            title: Root Type for new-doctor
            description: ''
            required:
                - doctor_firstname
                - doctor_lastname
                - doctor_email
                - field_id
            type: object
            properties:
                doctor_firstname:
                    type: string
                doctor_lastname:
                    type: string
                field_id:
                    format: int32
                    type: integer
                doctor_email:
                    type: string
            example:
                doctor_firstname: Liis123
                doctor_lastname: Hangmaa123
                field_id: 1
                doctor_email: liis.hangmaa@abc.ee23
        update-doctor:
            title: Root Type for update-doctor
            description: ''
            type: object
            properties:
                doctor_email:
                    type: string
                doctor_firstname:
                    type: string
                doctor_lastname:
                    type: string
                doctor_pass:
                    type: string
            example:
                doctor_firstname: Oliver
                doctor_lastname: Metsonn
                doctor_email: oliver.mets@gmail.com
                doctor_pass: '432231'
